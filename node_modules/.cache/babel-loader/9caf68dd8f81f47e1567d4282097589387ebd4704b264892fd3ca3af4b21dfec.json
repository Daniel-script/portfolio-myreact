{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ferre/OneDrive/Escritorio/portfolio-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ferre/OneDrive/Escritorio/portfolio-react/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/ferre/OneDrive/Escritorio/portfolio-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { noop } from '@motionone/utils';\nimport { animateStyle } from '../animate/animate-style.es.js';\nimport { style } from '../animate/style.es.js';\nimport { getOptions } from '../animate/utils/options.es.js';\nimport { hasChanged } from './utils/has-changed.es.js';\nimport { resolveVariant } from './utils/resolve-variant.es.js';\nimport { scheduleAnimation, unscheduleAnimation } from './utils/schedule.es.js';\nimport { inView } from './gestures/in-view.es.js';\nimport { hover } from './gestures/hover.es.js';\nimport { press } from './gestures/press.es.js';\nimport { motionEvent } from './utils/events.es.js';\nimport { Animation } from '@motionone/animation';\nvar gestures = {\n  inView: inView,\n  hover: hover,\n  press: press\n};\n/**\n * A list of state types, in priority order. If a value is defined in\n * a righter-most type, it will override any definition in a lefter-most.\n */\nvar stateTypes = [\"initial\", \"animate\"].concat(_toConsumableArray(Object.keys(gestures)), [\"exit\"]);\n/**\n * A global store of all generated motion states. This can be used to lookup\n * a motion state for a given Element.\n */\nvar mountedStates = new WeakMap();\nfunction createMotionState() {\n  var _marked = /*#__PURE__*/_regeneratorRuntime().mark(animateUpdates);\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var parent = arguments.length > 1 ? arguments[1] : undefined;\n  /**\n   * The element represented by the motion state. This is an empty reference\n   * when we create the state to support SSR and allow for later mounting\n   * in view libraries.\n   *\n   * @ts-ignore\n   */\n  var element;\n  /**\n   * Calculate a depth that we can use to order motion states by tree depth.\n   */\n  var depth = parent ? parent.getDepth() + 1 : 0;\n  /**\n   * Track which states are currently active.\n   */\n  var activeStates = {\n    initial: true,\n    animate: true\n  };\n  /**\n   * A map of functions that, when called, will remove event listeners for\n   * a given gesture.\n   */\n  var gestureSubscriptions = {};\n  /**\n   * Initialise a context to share through motion states. This\n   * will be populated by variant names (if any).\n   */\n  var context = {};\n  var _iterator = _createForOfIteratorHelper(stateTypes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var name = _step.value;\n      context[name] = typeof options[name] === \"string\" ? options[name] : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var initialVariantSource = options.initial === false ? \"animate\" : \"initial\";\n  /**\n   * Destructure an initial target out from the resolved initial variant.\n   */\n  var _a = resolveVariant(options[initialVariantSource] || context[initialVariantSource], options.variants) || {},\n    target = __rest(_a, [\"transition\"]);\n  /**\n   * The base target is a cached map of values that we'll use to animate\n   * back to if a value is removed from all active state types. This\n   * is usually the initial value as read from the DOM, for instance if\n   * it hasn't been defined in initial.\n   */\n  var baseTarget = Object.assign({}, target);\n  /**\n   * A generator that will be processed by the global animation scheduler.\n   * This yeilds when it switches from reading the DOM to writing to it\n   * to prevent layout thrashing.\n   */\n  function animateUpdates() {\n    var _a, _b, prevTarget, animationOptions, _iterator2, _step2, name, variant, key, allTargetKeys, animationFactories, animations, animationTarget;\n    return _regeneratorRuntime().wrap(function animateUpdates$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          prevTarget = target;\n          target = {};\n          animationOptions = {};\n          _iterator2 = _createForOfIteratorHelper(stateTypes);\n          _context.prev = 4;\n          _iterator2.s();\n        case 6:\n          if ((_step2 = _iterator2.n()).done) {\n            _context.next = 24;\n            break;\n          }\n          name = _step2.value;\n          if (activeStates[name]) {\n            _context.next = 10;\n            break;\n          }\n          return _context.abrupt(\"continue\", 22);\n        case 10:\n          variant = resolveVariant(options[name]);\n          if (variant) {\n            _context.next = 13;\n            break;\n          }\n          return _context.abrupt(\"continue\", 22);\n        case 13:\n          _context.t0 = _regeneratorRuntime().keys(variant);\n        case 14:\n          if ((_context.t1 = _context.t0()).done) {\n            _context.next = 22;\n            break;\n          }\n          key = _context.t1.value;\n          if (!(key === \"transition\")) {\n            _context.next = 18;\n            break;\n          }\n          return _context.abrupt(\"continue\", 14);\n        case 18:\n          target[key] = variant[key];\n          animationOptions[key] = getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options.transition) !== null && _b !== void 0 ? _b : {}, key);\n          _context.next = 14;\n          break;\n        case 22:\n          _context.next = 6;\n          break;\n        case 24:\n          _context.next = 29;\n          break;\n        case 26:\n          _context.prev = 26;\n          _context.t2 = _context[\"catch\"](4);\n          _iterator2.e(_context.t2);\n        case 29:\n          _context.prev = 29;\n          _iterator2.f();\n          return _context.finish(29);\n        case 32:\n          allTargetKeys = new Set([].concat(_toConsumableArray(Object.keys(target)), _toConsumableArray(Object.keys(prevTarget))));\n          animationFactories = [];\n          allTargetKeys.forEach(function (key) {\n            var _a;\n            if (target[key] === undefined) {\n              target[key] = baseTarget[key];\n            }\n            if (hasChanged(prevTarget[key], target[key])) {\n              (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : baseTarget[key] = style.get(element, key);\n              animationFactories.push(animateStyle(element, key, target[key], animationOptions[key], Animation));\n            }\n          });\n          // Wait for all animation states to read from the DOM\n          _context.next = 37;\n          return;\n        case 37:\n          animations = animationFactories.map(function (factory) {\n            return factory();\n          }).filter(Boolean);\n          if (animations.length) {\n            _context.next = 40;\n            break;\n          }\n          return _context.abrupt(\"return\");\n        case 40:\n          animationTarget = target;\n          element.dispatchEvent(motionEvent(\"motionstart\", animationTarget));\n          Promise.all(animations.map(function (animation) {\n            return animation.finished;\n          })).then(function () {\n            element.dispatchEvent(motionEvent(\"motioncomplete\", animationTarget));\n          }).catch(noop);\n        case 43:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _marked, null, [[4, 26, 29, 32]]);\n  }\n  var setGesture = function setGesture(name, isActive) {\n    return function () {\n      activeStates[name] = isActive;\n      scheduleAnimation(state);\n    };\n  };\n  var updateGestureSubscriptions = function updateGestureSubscriptions() {\n    for (var name in gestures) {\n      var isGestureActive = gestures[name].isActive(options);\n      var remove = gestureSubscriptions[name];\n      if (isGestureActive && !remove) {\n        gestureSubscriptions[name] = gestures[name].subscribe(element, {\n          enable: setGesture(name, true),\n          disable: setGesture(name, false)\n        }, options);\n      } else if (!isGestureActive && remove) {\n        remove();\n        delete gestureSubscriptions[name];\n      }\n    }\n  };\n  var state = {\n    update: function update(newOptions) {\n      if (!element) return;\n      options = newOptions;\n      updateGestureSubscriptions();\n      scheduleAnimation(state);\n    },\n    setActive: function setActive(name, isActive) {\n      if (!element) return;\n      activeStates[name] = isActive;\n      scheduleAnimation(state);\n    },\n    animateUpdates: animateUpdates,\n    getDepth: function getDepth() {\n      return depth;\n    },\n    getTarget: function getTarget() {\n      return target;\n    },\n    getOptions: function getOptions() {\n      return options;\n    },\n    getContext: function getContext() {\n      return context;\n    },\n    mount: function mount(newElement) {\n      invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n      element = newElement;\n      mountedStates.set(element, state);\n      updateGestureSubscriptions();\n      return function () {\n        mountedStates.delete(element);\n        unscheduleAnimation(state);\n        for (var key in gestureSubscriptions) {\n          gestureSubscriptions[key]();\n        }\n      };\n    },\n    isMounted: function isMounted() {\n      return Boolean(element);\n    }\n  };\n  return state;\n}\nexport { createMotionState, mountedStates };","map":{"version":3,"names":["__rest","invariant","noop","animateStyle","style","getOptions","hasChanged","resolveVariant","scheduleAnimation","unscheduleAnimation","inView","hover","press","motionEvent","Animation","gestures","stateTypes","concat","_toConsumableArray","Object","keys","mountedStates","WeakMap","createMotionState","_marked","_regeneratorRuntime","mark","animateUpdates","options","arguments","length","undefined","parent","element","depth","getDepth","activeStates","initial","animate","gestureSubscriptions","context","_iterator","_createForOfIteratorHelper","_step","s","n","done","name","value","getContext","err","e","f","initialVariantSource","_a","variants","target","baseTarget","assign","_b","prevTarget","animationOptions","_iterator2","_step2","variant","key","allTargetKeys","animationFactories","animations","animationTarget","wrap","animateUpdates$","_context","prev","next","abrupt","t0","t1","transition","t2","finish","Set","forEach","get","push","map","factory","filter","Boolean","dispatchEvent","Promise","all","animation","finished","then","catch","stop","setGesture","isActive","state","updateGestureSubscriptions","isGestureActive","remove","subscribe","enable","disable","update","newOptions","setActive","getTarget","mount","newElement","set","delete","isMounted"],"sources":["C:/Users/ferre/OneDrive/Escritorio/portfolio-react/node_modules/@motionone/dom/dist/state/index.es.js"],"sourcesContent":["import { __rest } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { noop } from '@motionone/utils';\nimport { animateStyle } from '../animate/animate-style.es.js';\nimport { style } from '../animate/style.es.js';\nimport { getOptions } from '../animate/utils/options.es.js';\nimport { hasChanged } from './utils/has-changed.es.js';\nimport { resolveVariant } from './utils/resolve-variant.es.js';\nimport { scheduleAnimation, unscheduleAnimation } from './utils/schedule.es.js';\nimport { inView } from './gestures/in-view.es.js';\nimport { hover } from './gestures/hover.es.js';\nimport { press } from './gestures/press.es.js';\nimport { motionEvent } from './utils/events.es.js';\nimport { Animation } from '@motionone/animation';\n\nconst gestures = { inView, hover, press };\n/**\n * A list of state types, in priority order. If a value is defined in\n * a righter-most type, it will override any definition in a lefter-most.\n */\nconst stateTypes = [\"initial\", \"animate\", ...Object.keys(gestures), \"exit\"];\n/**\n * A global store of all generated motion states. This can be used to lookup\n * a motion state for a given Element.\n */\nconst mountedStates = new WeakMap();\nfunction createMotionState(options = {}, parent) {\n    /**\n     * The element represented by the motion state. This is an empty reference\n     * when we create the state to support SSR and allow for later mounting\n     * in view libraries.\n     *\n     * @ts-ignore\n     */\n    let element;\n    /**\n     * Calculate a depth that we can use to order motion states by tree depth.\n     */\n    let depth = parent ? parent.getDepth() + 1 : 0;\n    /**\n     * Track which states are currently active.\n     */\n    const activeStates = { initial: true, animate: true };\n    /**\n     * A map of functions that, when called, will remove event listeners for\n     * a given gesture.\n     */\n    const gestureSubscriptions = {};\n    /**\n     * Initialise a context to share through motion states. This\n     * will be populated by variant names (if any).\n     */\n    const context = {};\n    for (const name of stateTypes) {\n        context[name] =\n            typeof options[name] === \"string\"\n                ? options[name]\n                : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n    const initialVariantSource = options.initial === false ? \"animate\" : \"initial\";\n    /**\n     * Destructure an initial target out from the resolved initial variant.\n     */\n    let _a = resolveVariant(options[initialVariantSource] || context[initialVariantSource], options.variants) || {}, target = __rest(_a, [\"transition\"]);\n    /**\n     * The base target is a cached map of values that we'll use to animate\n     * back to if a value is removed from all active state types. This\n     * is usually the initial value as read from the DOM, for instance if\n     * it hasn't been defined in initial.\n     */\n    const baseTarget = Object.assign({}, target);\n    /**\n     * A generator that will be processed by the global animation scheduler.\n     * This yeilds when it switches from reading the DOM to writing to it\n     * to prevent layout thrashing.\n     */\n    function* animateUpdates() {\n        var _a, _b;\n        const prevTarget = target;\n        target = {};\n        const animationOptions = {};\n        for (const name of stateTypes) {\n            if (!activeStates[name])\n                continue;\n            const variant = resolveVariant(options[name]);\n            if (!variant)\n                continue;\n            for (const key in variant) {\n                if (key === \"transition\")\n                    continue;\n                target[key] = variant[key];\n                animationOptions[key] = getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options.transition) !== null && _b !== void 0 ? _b : {}, key);\n            }\n        }\n        const allTargetKeys = new Set([\n            ...Object.keys(target),\n            ...Object.keys(prevTarget),\n        ]);\n        const animationFactories = [];\n        allTargetKeys.forEach((key) => {\n            var _a;\n            if (target[key] === undefined) {\n                target[key] = baseTarget[key];\n            }\n            if (hasChanged(prevTarget[key], target[key])) {\n                (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : (baseTarget[key] = style.get(element, key));\n                animationFactories.push(animateStyle(element, key, target[key], animationOptions[key], Animation));\n            }\n        });\n        // Wait for all animation states to read from the DOM\n        yield;\n        const animations = animationFactories\n            .map((factory) => factory())\n            .filter(Boolean);\n        if (!animations.length)\n            return;\n        const animationTarget = target;\n        element.dispatchEvent(motionEvent(\"motionstart\", animationTarget));\n        Promise.all(animations.map((animation) => animation.finished))\n            .then(() => {\n            element.dispatchEvent(motionEvent(\"motioncomplete\", animationTarget));\n        })\n            .catch(noop);\n    }\n    const setGesture = (name, isActive) => () => {\n        activeStates[name] = isActive;\n        scheduleAnimation(state);\n    };\n    const updateGestureSubscriptions = () => {\n        for (const name in gestures) {\n            const isGestureActive = gestures[name].isActive(options);\n            const remove = gestureSubscriptions[name];\n            if (isGestureActive && !remove) {\n                gestureSubscriptions[name] = gestures[name].subscribe(element, {\n                    enable: setGesture(name, true),\n                    disable: setGesture(name, false),\n                }, options);\n            }\n            else if (!isGestureActive && remove) {\n                remove();\n                delete gestureSubscriptions[name];\n            }\n        }\n    };\n    const state = {\n        update: (newOptions) => {\n            if (!element)\n                return;\n            options = newOptions;\n            updateGestureSubscriptions();\n            scheduleAnimation(state);\n        },\n        setActive: (name, isActive) => {\n            if (!element)\n                return;\n            activeStates[name] = isActive;\n            scheduleAnimation(state);\n        },\n        animateUpdates,\n        getDepth: () => depth,\n        getTarget: () => target,\n        getOptions: () => options,\n        getContext: () => context,\n        mount: (newElement) => {\n            invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n            element = newElement;\n            mountedStates.set(element, state);\n            updateGestureSubscriptions();\n            return () => {\n                mountedStates.delete(element);\n                unscheduleAnimation(state);\n                for (const key in gestureSubscriptions) {\n                    gestureSubscriptions[key]();\n                }\n            };\n        },\n        isMounted: () => Boolean(element),\n    };\n    return state;\n}\n\nexport { createMotionState, mountedStates };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}