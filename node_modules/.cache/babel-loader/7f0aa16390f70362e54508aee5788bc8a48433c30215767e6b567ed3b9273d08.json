{"ast":null,"code":"import _classCallCheck from \"C:/Users/ferre/OneDrive/Escritorio/portfolio-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ferre/OneDrive/Escritorio/portfolio-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\nvar Animation = /*#__PURE__*/function () {\n  function Animation(output) {\n    var _this = this;\n    var keyframes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 1];\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      easing = _ref.easing,\n      _ref$duration = _ref.duration,\n      initialDuration = _ref$duration === void 0 ? defaults.duration : _ref$duration,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? defaults.delay : _ref$delay,\n      _ref$endDelay = _ref.endDelay,\n      endDelay = _ref$endDelay === void 0 ? defaults.endDelay : _ref$endDelay,\n      _ref$repeat = _ref.repeat,\n      repeat = _ref$repeat === void 0 ? defaults.repeat : _ref$repeat,\n      offset = _ref.offset,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? \"normal\" : _ref$direction;\n    _classCallCheck(this, Animation);\n    this.startTime = null;\n    this.rate = 1;\n    this.t = 0;\n    this.cancelTimestamp = null;\n    this.easing = noopReturn;\n    this.duration = 0;\n    this.totalDuration = 0;\n    this.repeat = 0;\n    this.playState = \"idle\";\n    this.finished = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    easing = easing || defaults.easing;\n    if (isEasingGenerator(easing)) {\n      var custom = easing.createAnimation(keyframes);\n      easing = custom.easing;\n      keyframes = custom.keyframes || keyframes;\n      initialDuration = custom.duration || initialDuration;\n    }\n    this.repeat = repeat;\n    this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n    this.updateDuration(initialDuration);\n    var interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n    this.tick = function (timestamp) {\n      var _a;\n      // TODO: Temporary fix for OptionsResolver typing\n      delay = delay;\n      var t = 0;\n      if (_this.pauseTime !== undefined) {\n        t = _this.pauseTime;\n      } else {\n        t = (timestamp - _this.startTime) * _this.rate;\n      }\n      _this.t = t;\n      // Convert to seconds\n      t /= 1000;\n      // Rebase on delay\n      t = Math.max(t - delay, 0);\n      /**\n       * If this animation has finished, set the current time\n       * to the total duration.\n       */\n      if (_this.playState === \"finished\" && _this.pauseTime === undefined) {\n        t = _this.totalDuration;\n      }\n      /**\n       * Get the current progress (0-1) of the animation. If t is >\n       * than duration we'll get values like 2.5 (midway through the\n       * third iteration)\n       */\n      var progress = t / _this.duration;\n      // TODO progress += iterationStart\n      /**\n       * Get the current iteration (0 indexed). For instance the floor of\n       * 2.5 is 2.\n       */\n      var currentIteration = Math.floor(progress);\n      /**\n       * Get the current progress of the iteration by taking the remainder\n       * so 2.5 is 0.5 through iteration 2\n       */\n      var iterationProgress = progress % 1.0;\n      if (!iterationProgress && progress >= 1) {\n        iterationProgress = 1;\n      }\n      /**\n       * If iteration progress is 1 we count that as the end\n       * of the previous iteration.\n       */\n      iterationProgress === 1 && currentIteration--;\n      /**\n       * Reverse progress if we're not running in \"normal\" direction\n       */\n      var iterationIsOdd = currentIteration % 2;\n      if (direction === \"reverse\" || direction === \"alternate\" && iterationIsOdd || direction === \"alternate-reverse\" && !iterationIsOdd) {\n        iterationProgress = 1 - iterationProgress;\n      }\n      var p = t >= _this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n      var latest = interpolate$1(_this.easing(p));\n      output(latest);\n      var isAnimationFinished = _this.pauseTime === undefined && (_this.playState === \"finished\" || t >= _this.totalDuration + endDelay);\n      if (isAnimationFinished) {\n        _this.playState = \"finished\";\n        (_a = _this.resolve) === null || _a === void 0 ? void 0 : _a.call(_this, latest);\n      } else if (_this.playState !== \"idle\") {\n        _this.frameRequestId = requestAnimationFrame(_this.tick);\n      }\n    };\n    this.play();\n  }\n  _createClass(Animation, [{\n    key: \"play\",\n    value: function play() {\n      var now = performance.now();\n      this.playState = \"running\";\n      if (this.pauseTime !== undefined) {\n        this.startTime = now - this.pauseTime;\n      } else if (!this.startTime) {\n        this.startTime = now;\n      }\n      this.cancelTimestamp = this.startTime;\n      this.pauseTime = undefined;\n      this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.playState = \"paused\";\n      this.pauseTime = this.t;\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this.playState = \"finished\";\n      this.tick(0);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var _a;\n      this.playState = \"idle\";\n      if (this.frameRequestId !== undefined) {\n        cancelAnimationFrame(this.frameRequestId);\n      }\n      (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.stop();\n      this.tick(this.cancelTimestamp);\n    }\n  }, {\n    key: \"reverse\",\n    value: function reverse() {\n      this.rate *= -1;\n    }\n  }, {\n    key: \"commitStyles\",\n    value: function commitStyles() {}\n  }, {\n    key: \"updateDuration\",\n    value: function updateDuration(duration) {\n      this.duration = duration;\n      this.totalDuration = duration * (this.repeat + 1);\n    }\n  }, {\n    key: \"currentTime\",\n    get: function get() {\n      return this.t;\n    },\n    set: function set(t) {\n      if (this.pauseTime !== undefined || this.rate === 0) {\n        this.pauseTime = t;\n      } else {\n        this.startTime = performance.now() - t / this.rate;\n      }\n    }\n  }, {\n    key: \"playbackRate\",\n    get: function get() {\n      return this.rate;\n    },\n    set: function set(rate) {\n      this.rate = rate;\n    }\n  }]);\n  return Animation;\n}();\nexport { Animation };","map":{"version":3,"names":["noopReturn","defaults","isEasingGenerator","isEasingList","interpolate","getEasingFunction","Animation","output","_this","keyframes","arguments","length","undefined","_ref","easing","_ref$duration","duration","initialDuration","_ref$delay","delay","_ref$endDelay","endDelay","_ref$repeat","repeat","offset","_ref$direction","direction","_classCallCheck","startTime","rate","t","cancelTimestamp","totalDuration","playState","finished","Promise","resolve","reject","custom","createAnimation","updateDuration","interpolate$1","map","tick","timestamp","_a","pauseTime","Math","max","progress","currentIteration","floor","iterationProgress","iterationIsOdd","p","min","latest","isAnimationFinished","call","frameRequestId","requestAnimationFrame","play","_createClass","key","value","now","performance","pause","finish","stop","cancelAnimationFrame","cancel","reverse","commitStyles","get","set"],"sources":["C:/Users/ferre/OneDrive/Escritorio/portfolio-react/node_modules/@motionone/animation/dist/Animation.es.js"],"sourcesContent":["import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nclass Animation {\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", } = {}) {\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = noopReturn;\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing = easing || defaults.easing;\n        if (isEasingGenerator(easing)) {\n            const custom = easing.createAnimation(keyframes);\n            easing = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n        this.updateDuration(initialDuration);\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n        this.tick = (timestamp) => {\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay = delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) {\n                t = this.pauseTime;\n            }\n            else {\n                t = (timestamp - this.startTime) * this.rate;\n            }\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\n                t = this.totalDuration;\n            }\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" ||\n                (direction === \"alternate\" && iterationIsOdd) ||\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\n                iterationProgress = 1 - iterationProgress;\n            }\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate$1(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined &&\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n            }\n            else if (this.playState !== \"idle\") {\n                this.frameRequestId = requestAnimationFrame(this.tick);\n            }\n        };\n        this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) {\n            this.startTime = now - this.pauseTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = now;\n        }\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) {\n            cancelAnimationFrame(this.frameRequestId);\n        }\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() { }\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) {\n            this.pauseTime = t;\n        }\n        else {\n            this.startTime = performance.now() - t / this.rate;\n        }\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\nexport { Animation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}